{
  "api": {
    "name": "CapacitorPluginTnkPlugin",
    "slug": "capacitorplugintnkplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "call_tnk_bannerAd",
        "signature": "(options: { tnk_pub_id: string; placementId: string; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ tnk_pub_id: string; placementId: string; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "call_tnk_bannerad"
      },
      {
        "name": "call_tnk_nativeAd",
        "signature": "(options: { tnk_pub_id: string; placementId: string; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ tnk_pub_id: string; placementId: string; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "call_tnk_nativead"
      },
      {
        "name": "call_tnk_interstitialAd",
        "signature": "(options: { tnk_pub_id: string; placementId: string; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ tnk_pub_id: string; placementId: string; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "call_tnk_interstitialad"
      },
      {
        "name": "call_tnk_rewardedAd",
        "signature": "(options: { tnk_pub_id: string; placementId: string; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ tnk_pub_id: string; placementId: string; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "call_tnk_rewardedad"
      },
      {
        "name": "initialize",
        "signature": "(options: { appId: string; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ appId: string; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "initialize"
      },
      {
        "name": "showBanner",
        "signature": "(options: { adBannerId: string; position: string; margin: number; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ adBannerId: string; position: string; margin: number; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "showbanner"
      },
      {
        "name": "hideBanner",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "hidebanner"
      },
      {
        "name": "removeBanner",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "removebanner"
      },
      {
        "name": "resumeBanner",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "resumebanner"
      },
      {
        "name": "addListener",
        "signature": "(eventName: \"bannerAdLoaded\", listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'bannerAdLoaded'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerbanneradloaded"
      },
      {
        "name": "addListener",
        "signature": "(eventName: \"bannerAdFailedToLoad\", listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'bannerAdFailedToLoad'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerbanneradfailedtoload"
      },
      {
        "name": "addListener",
        "signature": "(eventName: \"bannerAdClicked\", listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'bannerAdClicked'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerbanneradclicked"
      },
      {
        "name": "prepareRewardVideoAd",
        "signature": "(options: { adRewardId: string; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ adRewardId: string; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "preparerewardvideoad"
      },
      {
        "name": "showRewardVideoAd",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "showrewardvideoad"
      },
      {
        "name": "isLoadedRewardVideoAd",
        "signature": "() => Promise<{ isLoadedRewardVideoAd: boolean; }>",
        "parameters": [],
        "returns": "Promise<{ isLoadedRewardVideoAd: boolean; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "isloadedrewardvideoad"
      },
      {
        "name": "addListener",
        "signature": "(eventName: \"onRewardedVideoLoaded\", listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'onRewardedVideoLoaded'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlisteneronrewardedvideoloaded"
      },
      {
        "name": "addListener",
        "signature": "(eventName: \"onRewardedVideoFailedToLoad\", listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'onRewardedVideoFailedToLoad'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlisteneronrewardedvideofailedtoload"
      },
      {
        "name": "addListener",
        "signature": "(eventName: \"onRewardedVideoClicked\", listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'onRewardedVideoClicked'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlisteneronrewardedvideoclicked"
      },
      {
        "name": "addListener",
        "signature": "(eventName: \"onRewardedVideoStarted\", listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'onRewardedVideoStarted'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlisteneronrewardedvideostarted"
      },
      {
        "name": "addListener",
        "signature": "(eventName: \"onRewardedVideoFinished\", listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'onRewardedVideoFinished'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlisteneronrewardedvideofinished"
      },
      {
        "name": "prepareInterstitial",
        "signature": "(options: { adInterstitialId: string; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ adInterstitialId: string; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "prepareinterstitial"
      },
      {
        "name": "showInterstitial",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "showinterstitial"
      },
      {
        "name": "isLoadedInterstitial",
        "signature": "() => Promise<{ isLoadedInterstitial: boolean; }>",
        "parameters": [],
        "returns": "Promise<{ isLoadedInterstitial: boolean; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "isloadedinterstitial"
      },
      {
        "name": "addListener",
        "signature": "(eventName: \"onInterstitialLoaded\", listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'onInterstitialLoaded'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlisteneroninterstitialloaded"
      },
      {
        "name": "addListener",
        "signature": "(eventName: \"onInterstitialFailedToLoad\", listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'onInterstitialFailedToLoad'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlisteneroninterstitialfailedtoload"
      },
      {
        "name": "addListener",
        "signature": "(eventName: \"onInterstitialClicked\", listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'onInterstitialClicked'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlisteneroninterstitialclicked"
      },
      {
        "name": "addListener",
        "signature": "(eventName: \"onInterstitialShown\", listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'onInterstitialShown'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlisteneroninterstitialshown"
      },
      {
        "name": "addListener",
        "signature": "(eventName: \"onInterstitialDismissed\", listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'onInterstitialDismissed'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlisteneroninterstitialdismissed"
      }
    ],
    "properties": []
  },
  "interfaces": [
    {
      "name": "PluginListenerHandle",
      "slug": "pluginlistenerhandle",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "remove",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "() => Promise<void>"
        }
      ]
    }
  ],
  "enums": [],
  "typeAliases": [],
  "pluginConfigs": []
}