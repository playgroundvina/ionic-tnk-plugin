{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAI5C,MAAM,OAAO,qBACX,SAAQ,SAAS;IAIjB,KAAK,CAAC,iBAAiB,CAAC,OAAqD;QAC3E,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;QAC9C,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,OAAO,CAAC,WAAW,CAAC,CAAC;IAClD,CAAC;IACD,KAAK,CAAC,iBAAiB,CAAC,OAAqD;QAC3E,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;QAC9C,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,OAAO,CAAC,WAAW,CAAC,CAAC;IAClD,CAAC;IACD,KAAK,CAAC,uBAAuB,CAAC,OAAqD;QACjF,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;QAC9C,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,OAAO,CAAC,WAAW,CAAC,CAAC;IAClD,CAAC;IACD,KAAK,CAAC,mBAAmB,CAAC,OAAqD;QAC7E,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;QAC9C,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,OAAO,CAAC,WAAW,CAAC,CAAC;IAClD,CAAC;IAED,UAAU,CAAC,OAA2B;QACpC,OAAO,CAAC,GAAG,CAAC,YAAY,EAAC,OAAO,CAAC,KAAK,CAAC,CAAA;QACvC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,UAAU,CAAC,OAAkE;QAC3E,OAAO,CAAC,GAAG,CAAC,YAAY,EAAC,OAAO,CAAC,UAAU,CAAC,CAAA;QAC5C,OAAO,CAAC,GAAG,CAAC,YAAY,EAAC,OAAO,CAAC,QAAQ,CAAC,CAAA;QAC1C,OAAO,CAAC,GAAG,CAAC,YAAY,EAAC,OAAO,CAAC,MAAM,CAAC,CAAA;QAExC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,UAAU;QACR,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,YAAY;QACV,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,YAAY;QACV,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,oBAAoB,CAAC,OAAgC;QACnD,OAAO,CAAC,GAAG,CAAC,YAAY,EAAC,OAAO,CAAC,UAAU,CAAC,CAAA;QAE5C,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,iBAAiB;QACf,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,qBAAqB;QACnB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,mBAAmB,CAAC,OAAsC;QACxD,OAAO,CAAC,GAAG,CAAC,YAAY,EAAC,OAAO,CAAC,gBAAgB,CAAC,CAAA;QAElD,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,gBAAgB;QACd,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,oBAAoB;QAClB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;CAEF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { CapacitorPluginTnkPlugin } from './definitions';\n\nexport class CapacitorPluginTnkWeb\n  extends WebPlugin\n  implements CapacitorPluginTnkPlugin\n{\n\n  async call_tnk_bannerAd(options: { tnk_pub_id: string; placementId: string; }): Promise<void> {\n    console.log('tnk_pub_id', options.tnk_pub_id);\n    console.log('placementId', options.placementId);\n  }\n  async call_tnk_nativeAd(options: { tnk_pub_id: string; placementId: string; }): Promise<void> {\n    console.log('tnk_pub_id', options.tnk_pub_id);\n    console.log('placementId', options.placementId);\n  }\n  async call_tnk_interstitialAd(options: { tnk_pub_id: string; placementId: string; }): Promise<void> {\n    console.log('tnk_pub_id', options.tnk_pub_id);\n    console.log('placementId', options.placementId);\n  }\n  async call_tnk_rewardedAd(options: { tnk_pub_id: string; placementId: string; }): Promise<void> {\n    console.log('tnk_pub_id', options.tnk_pub_id);\n    console.log('placementId', options.placementId);\n  }\n  \n  initialize(options: { appId: string; }): Promise<void> {\n    console.log('initialize',options.appId)\n    throw new Error('Method not implemented.');\n  }\n  showBanner(options: { adBannerId: string; position: string; margin: number; }): Promise<void> {\n    console.log('initialize',options.adBannerId)\n    console.log('initialize',options.position)\n    console.log('initialize',options.margin)\n\n    throw new Error('Method not implemented.');\n  }\n  hideBanner(): Promise<void> {\n    throw new Error('Method not implemented.');\n  }\n  resumeBanner(): Promise<void> {\n    throw new Error('Method not implemented.');\n  }\n  removeBanner(): Promise<void> {\n    throw new Error('Method not implemented.');\n  }\n  prepareRewardVideoAd(options: { adRewardId: string; }): Promise<void> {\n    console.log('initialize',options.adRewardId)\n\n    throw new Error('Method not implemented.');\n  }\n  showRewardVideoAd(): Promise<void> {\n    throw new Error('Method not implemented.');\n  }\n  isLoadedRewardVideoAd(): Promise<{ isLoadedRewardVideoAd: boolean; }> {\n    throw new Error('Method not implemented.');\n  }\n  prepareInterstitial(options: { adInterstitialId: string; }): Promise<void> {\n    console.log('initialize',options.adInterstitialId)\n\n    throw new Error('Method not implemented.');\n  }\n  showInterstitial(): Promise<void> {\n    throw new Error('Method not implemented.');\n  }\n  isLoadedInterstitial(): Promise<{ isLoadedInterstitial: boolean; }> {\n    throw new Error('Method not implemented.');\n  }\n  \n}\n"]}